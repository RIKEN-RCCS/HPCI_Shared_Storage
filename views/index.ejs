<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="base-path" content="<%= basePath %>">
  <title>HPCI Shared Storage</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
  <main class="container py-4 mt-4">
    <div class="col-12 col-md-8 col-lg-5">
      <div class="card shadow-sm">
        <div class="card-body p-4">
          <h1 class="h4 mb-2">Step 1. Generate Refresh Token </h1>
          <p class="mb-5" style="text-align: justify;">Please generate a refresh token at <a href="https://elpis.hpci.nii.ac.jp">https://elpis.hpci.nii.ac.jp</a>. If you are unsure how to do this, please refer to Sections 2.1 and 2.2 of the HPCI Shared Storage User Manual (<a target="_blank" href="https://www.hpci-office.jp/application/files/2017/1409/2660/HPCI-ST01-006E-02.pdf">EN</a> | <a target="_blank" href="https://www.hpci-office.jp/application/files/3717/1409/2660/HPCI-ST01-006-02.pdf">JA</a>).</p>
          <h1 class="h4 mb-2">Step 2. Mount HPCI Shared Storage</h1>
          <p style="text-align: justify;">Enter your HPCI ID and the passphrase generated in step 1.</p>
          <form id="mountForm" method="POST" action="/login">
            <div class="mb-3">
              <label for="hpci_id" class="form-label">HPCI ID</label>
              <input id="hpci_id" name="hpci_id" type="text" class="form-control" required>
            </div>
            <div class="mb-3">
              <label for="passphrase" class="form-label">Passphrase</label>
              <input id="passphrase" name="passphrase" type="password" class="form-control" required>
            </div>
            <div class="d-grid gap-2">
              <button id="mountBtn" type="submit" class="btn btn-primary">Mount</button>
            </div>
          </form>
          <div id="mountResult" class="my-3"></div>
          <h1 id="step3" class="h4 mt-5 mb-2 d-none">Step 3. Unmount HPCI Shared Storage</h1>
          <p id="step3p" class="d-none" style="text-align: justify;">After you have finished using the HPCI shared storage, please press the button below.</p>
          <form id="umountForm" method="POST" action="/login" class="d-none">
            <div class="mt-3">
              <div class="d-grid gap-2">
                <button id="umountBtn" type="submit" class="btn btn-danger">Unmount</button>
              </div>
            </div>
          </form>
          <div id="umountResult" class="mt-3"></div>
        </div>
      </div>
    </div>
  </main>
  <script>
  (function() {
    'use strict';

    const base = document.querySelector('meta[name="base-path"]').getAttribute('content') || ''; // Read base path injected by the server
    const mountForm = document.getElementById('mountForm');
    const hpciId_obj = document.getElementById('hpci_id');
    const passphrase_obj = document.getElementById('passphrase');
    const mountBtn = document.getElementById('mountBtn');
    const mountResult = document.getElementById('mountResult');
    const step3 = document.getElementById('step3');
    const step3p = document.getElementById('step3p');
    const umountForm = document.getElementById('umountForm');
    const umountBtn = document.getElementById('umountBtn');
    const umountResult = document.getElementById('umountResult');
      
    // Handle mount
    mountForm?.addEventListener('submit', async (e) => {
      e.preventDefault();

      let mounted = false;
      const hpciId = (hpciId_obj.value || '').trim();
      const passphrase = (passphrase_obj.value || '').trim();
      if (!hpciId || !passphrase) {
        mountResult.innerHTML = '<div class="alert alert-warning">Please provide both HPCI ID and Passphrase.</div>';
        return;
      }

      mountBtn.disabled = true;
      mountResult.innerHTML = '<div class="alert alert-info">Mounting...</div>';
      umountResult.innerHTML = '';

      try {
        const res = await fetch(base + '/api/mount', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ hpci_id: hpciId, passphrase })
        });
        const data = await res.json();

        if (data.ok) {
          const link = window.location.origin + '/pun/sys/dashboard/files/fs' + (data.path || '');
          mountResult.innerHTML = '<div class="alert alert-success">Mount succeeded. <a target="_blank" href="' + link + '">' + (data.path || '') + '</a></div>';

          // Show 3
          step3.classList.remove('d-none');
          step3p.classList.remove('d-none');
          umountForm.classList.remove('d-none');

          // Disable objects
          hpciId_obj.disabled = true;
          passphrase_obj.disabled = true;
          mounted = true;
        } else {
          mountResult.innerHTML = '<div class="alert alert-danger">Mount failed: ' + (data.stderr || data.raw || 'Unknown error') + '</div>';
        }
      } catch (err) {
        mountResult.innerHTML = '<div class="alert alert-danger">Request failed: ' + (err && err.message ? err.message : String(err)) + '</div>';
      } finally {
        if (!mounted) mountBtn.disabled = false;
      }
    });

    // Handle unmount
    umountForm?.addEventListener('submit', async (e) => {
      e.preventDefault();

      umountBtn.disabled = true;
      umountResult.innerHTML = '<div class="alert alert-info">Unmounting...</div>';
      try {
        const res = await fetch(base + '/api/umount', { method: 'POST' });
        const data = await res.json();
        if (data.ok) {
          umountResult.innerHTML = '<div class="alert alert-success">Unmount completed.</div>';
          mountBtn.disabled = false;
          hpciId_obj.disabled = false;
          passphrase_obj.disabled = false;
          mountResult.innerHTML = '';
          step3.classList.add('d-none');
          step3p.classList.add('d-none');
          umountForm.classList.add('d-none');
        } else {
          umountResult.innerHTML = '<div class="alert alert-danger">Unmount failed: ' + (data.stderr || data.raw || 'Unknown error') + '</div>';
        }
      } catch (err) {
        umountResult.innerHTML = '<div class="alert alert-danger">Request failed: ' + (err && err.message ? err.message : String(err)) + '</div>';
      } finally {
        umountBtn.disabled = false;
      }
    });
  })();
  </script>
</body>
</html>
